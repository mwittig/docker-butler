#!/usr/bin/env node
var dockerButler   = require('./..');

var argv = require('yargs')
    .usage('Usage: dbutler [options]')

    .alias('g', 'git')
    .describe('g', 'The url to your github repo')

    .alias('t', 'tag')
    .describe('t', 'The tag for the container')

    .alias('s', 'socket')
    .default('s', '/var/run/docker.sock')
    .describe('socket', 'Your socket docker connection, eg /var/run/docker.sock')

    .alias('h', 'host')
    .describe('h', 'Your docker host: eg. http://192.168.42.43:2375')

    .alias('b', 'branch')
    .default('b', 'master')
    .describe('b', 'The branch you want to deploy')

    // .alias('c', 'containers')
    // .default('c', 1)
    // .describe('c', 'How many containers you want to run')

    .describe('dns', 'The DNS, eg. 8.8.8.8')

    .describe('v', 'The volume eg /some/host_folder:/some/container_folder (host:container)')
    .alias('v', 'volumes')

    .describe('wait', 'Time to wait to check if the container is running')
    .default('wait', 1000)


    .describe('env', 'The env vars')
    .alias('e', 'env')

    .demand(['g', 't'])
    .argv;


// Howto Help
if (argv.help) {
    require('yargs').showHelp();
    process.exit(0);
}

dockerButler(argv).then(function () {
    process.exit(0);
}).catch(function () {
    process.exit(1);
});